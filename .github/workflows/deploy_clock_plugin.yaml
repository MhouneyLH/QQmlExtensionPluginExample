name: Windows Plugin Release

on:
  push:
    branches:
      - 'master'
      - 'develop'
      - 'feat/*'
      - 'docs/*'
      - 'chore/*'
      - 'fix/*'
      - 'refactor/*'
      - 'style/*'
      - 'perf/*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'master'
      - 'develop'
      - 'feat/*'
      - 'docs/*'
      - 'chore/*'
      - 'fix/*'
      - 'refactor/*'
      - 'style/*'
      - 'perf/*'

defaults:
  run:
    shell: cmd

env:
  SOURCE_DIR: ${{ github.workspace }}
  QT_VERSION: 6.2.4
  ARTIFACT: ClockPlugin.zip
  ARTIFACT_WITHOUT_ZIP_ENDING: ClockPlugin

jobs:
  build:
    runs-on: windows-2019

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          submodules: recursive
      - name: Get all tags for correct version determination
        working-directory: ${{ env.SOURCE_DIR }}
        run: |
          git fetch --all --tags -f
      - name: Cache Qt-Installation
        id: cache-qt
        uses: actions/cache@v3
        env: 
          cache-name: cache-qt
        with:
          path: ${{ runner.temp }}\Qt
          key: ${{ runner.os }}-Qt-${{ env.QT_VERSION }}
      - if: ${{ steps.cache-qt.outputs.cache-hit != 'true' }}
        name: Install Qt
        uses: jurplel/install-qt-action@v3
        with:
          version: ${{ env.QT_VERSION }}
          host: windows
          target: desktop
          arch: win64_msvc2019_64
          dir: ${{ runner.temp }}
          setup-pyqt: false
      - name: Download JOM
        uses: suisei-cn/actions-download-file@v1
        with:
          url: http://download.qt.io/official_releases/jom/jom.zip
          target: ${{ runner.temp }}\
      - name: Extract JOM
        working-directory: ${{ runner.temp }}
        run: |
          7z x jom.zip
      - name: Create build directory
        run: mkdir ${{ runner.temp }}\build
      - name: Set up Visual Studio shell
        uses: egor-tensin/vs-shell@v2
        with:
          arch: x64
          vs_version: 2019
      - name: Build
        working-directory: ${{ runner.temp }}\build
        # have to set the path, when the Qt-Installation is cached
        run: |
          set PATH=%PATH%;..\Qt\${{ env.QT_VERSION }}\msvc2019_64\bin
          qmake -r ${{ env.SOURCE_DIR }}\clock_plugin\clock_plugin.pro
          ${{ runner.temp }}\jom.exe -j2
      # had to comment it out, because otherwise the actions/upload-artifact@v2 
      # creates another .zip-file around this .zip-file
      # - name: Create the artifact (Zip the build)
      #   working-directory: ${{ runner.temp }}
      #   run: |
      #     7z a ${{ env.ARTIFACT }} ${{ runner.temp }}\build\imports\ClockPlugin\*
      - name: Save the artifact
        uses: actions/upload-artifact@v2
        with:
          name: ${{ env.ARTIFACT_WITHOUT_ZIP_ENDING }}
          path: ${{ runner.temp }}\build\imports\${{ env.ARTIFACT_WITHOUT_ZIP_ENDING }}